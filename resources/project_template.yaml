apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: project-request
objects:
# Set Default network policies
- kind: NetworkPolicy
  apiVersion: networking.k8s.io/v1
  metadata:
    name: default-deny
  spec:
    podSelector:
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-self
  spec:
    podSelector:
    ingress:
    - from:
      - podSelector: {}
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-global-namespaces
  spec:
    podSelector:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: default

# Limit Ranges
- apiVersion: "v1"
  kind: "LimitRange"
  metadata:
    name: "core-resource-limits" 
  spec:
    limits: # Limit ranges for pods
      - type: Pod
        max:
          cpu: "10"
          memory: 8Gi
        min:
          cpu: 50m
          memory: 100Mi
      - type: Container
        min:
          cpu: 50m
          memory: 100Mi
        max:
          cpu: "10"
          memory: 8Gi
        default:
          cpu: 1000m
          memory: 500Mi
        defaultRequest:
          cpu: 50m
          memory: 100Mi
        maxLimitRequestRatio:
          cpu: "200"

# Project Quota
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    annotations:
      openshift.io/quota-tier: Medium
    labels:
      quota-tier: Medium
    name: quota
  spec:
    hard:
      cpu: "6"
      memory: 16Gi
    scopes:
    - NotTerminating  
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    annotations:
      openshift.io/quota-tier: Medium
    labels:
      quota-tier: Medium
    name: burst-quota
  spec:
    hard:
      cpu: "10"
      memory: 24Gi


# Standard project template
- apiVersion: project.openshift.io/v1
  kind: Project
  metadata:
    annotations:
      openshift.io/description: ${PROJECT_DESCRIPTION}
      openshift.io/display-name: ${PROJECT_DISPLAYNAME}
      openshift.io/requester: ${PROJECT_REQUESTING_USER}
      openshift.io/node-selector: "client=${PROJECT_CLIENT}"
    creationTimestamp: null
    name: ${PROJECT_NAME}
  spec: {}
  status: {}
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    annotations:
      openshift.io/description: Allows all pods in this namespace to pull images from
        this namespace.  It is auto-managed by a controller; remove subjects to disable.
    creationTimestamp: null
    name: system:image-pullers
    namespace: ${PROJECT_NAME}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:image-puller
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts:${PROJECT_NAME}
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    annotations:
      openshift.io/description: Allows builds in this namespace to push images to
        this namespace.  It is auto-managed by a controller; remove subjects to disable.
    creationTimestamp: null
    name: system:image-builders
    namespace: ${PROJECT_NAME}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:image-builder
  subjects:
  - kind: ServiceAccount
    name: builder
    namespace: ${PROJECT_NAME}
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    annotations:
      openshift.io/description: Allows deploymentconfigs in this namespace to rollout
        pods in this namespace.  It is auto-managed by a controller; remove subjects
        to disable.
    creationTimestamp: null
    name: system:deployers
    namespace: ${PROJECT_NAME}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:deployer
  subjects:
  - kind: ServiceAccount
    name: deployer
    namespace: ${PROJECT_NAME}
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    name: admin
    namespace: ${PROJECT_NAME}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: ${PROJECT_ADMIN_USER}
parameters:
- name: PROJECT_NAME
- name: PROJECT_DISPLAYNAME
- name: PROJECT_DESCRIPTION
- name: PROJECT_ADMIN_USER
- name: PROJECT_REQUESTING_USER
- name: PROJECT_CLIENT
  required: true
  value: "common"
