apiVersion: v1
kind: Template
metadata:
  name: gogs
parameters:

- name: APPS_DOMAIN
  description: Application wildcard domain
  required: true
  # apps.npd.msa.libgbl.biz

- name: NAMESPACE
  description: Target namespace
  required: true
  value: cicd

- name: GOGS_MEM_REQUESTS
  description: Requested memory for pod
  required: false
  value: 1Gi
- name: GOGS_MEM_LIMITS
  description: Limit for pod memory
  required: false
  value: 2Gi
- name: GOGS_CPU_REQUESTS
  description: Requested CPU for pod
  required: false
  value: 1000m
- name: GOGS_CPU_LIMITS
  description: Limit for pod CPU
  required: false
  value: 2000m
- name: GOGS_VOLUME_CAPACITY
  description: Capacity of persistent volume
  required: false
  value: 4G

- name: POSTGRES_MEM_REQUESTS
  description: Requested memory for pod
  required: false
  value: 1Gi
- name: POSTGRES_MEM_LIMITS
  description: Limit for pod memory
  required: false
  value: 2Gi
- name: POSTGRES_CPU_REQUESTS
  description: Requested CPU for pod
  required: false
  value: 1000m
- name: POSTGRES_CPU_LIMITS
  description: Limit for pod CPU
  required: false
  value: 2000m
- name: POSTGRES_VOLUME_CAPACITY
  description: Capacity of persistent volume
  required: false
  value: 4G


objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: gogs
    name: gogs
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: gogs
      deploymentconfig: gogs
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
    labels:
      app: postgresql-gogs
      template: postgresql-persistent-template
    name: postgresql-gogs
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql-gogs
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    generation: 7
    labels:
      app: gogs
    name: gogs
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: gogs
      deploymentconfig: gogs
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: gogs
          deploymentconfig: gogs
      spec:
        containers:
        - image: wkulhanek/gogs@sha256:1aa8707b76f7e395421190928984e0962fac2c306e67c9d41c9c0602592c9665
          imagePullPolicy: IfNotPresent
          name: gogs
          ports:
          - containerPort: 3000
            protocol: TCP
            resources:
            limits:
              cpu: ${GOGS_CPU_LIMITS}
              memory: ${GOGS_MEM_LIMITS}
            requests:
              cpu: ${GOGS_CPU_REQUESTS}
              memory: ${GOGS_MEM_REQUESTS}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: gogs-volume-1
          - mountPath: /opt/gogs/custom/conf
            name: gogs-config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gogs-volume-1
          persistentVolumeClaim:
            claimName: pvc-gogs
        - configMap:
            defaultMode: 420
            name: gogs
          name: gogs-config
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - gogs
        from:
          kind: ImageStreamTag
          name: gogs:11.86
        lastTriggeredImage: wkulhanek/gogs@sha256:1aa8707b76f7e395421190928984e0962fac2c306e67c9d41c9c0602592c9665
      type: ImageChange
    - type: ConfigChange
  status: {}
    
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.alpha.openshift.io/wait-for-ready: "true"
    generation: 2
    labels:
      app: postgresql-gogs
      template: postgresql-persistent-template
    name: postgresql-gogs
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: postgresql-gogs
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: postgresql-persistent
          name: postgresql-gogs
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgresql-gogs
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgresql-gogs
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgresql-gogs
          image: docker-registry.default.svc:5000/openshift/postgresql@sha256:d740d4960134a692d4d4a19a04c191b563a9cebc4f3dea04e92ae47d08e03451
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: ${POSTGRES_CPU_LIMITS}
              memory: ${POSTGRES_MEM_LIMITS}
            requests:
              cpu: ${POSTGRES_CPU_REQUESTS}
              memory: ${POSTGRES_MEM_REQUESTS}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.6
          namespace: openshift
        lastTriggeredImage: docker-registry.default.svc:5000/openshift/postgresql@sha256:d740d4960134a692d4d4a19a04c191b563a9cebc4f3dea04e92ae47d08e03451
      type: ImageChange
    - type: ConfigChange
  status: {}
   
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      openshift.io/image.dockerRepositoryCheck: 2019-03-13T21:28:45Z
    generation: 2
    labels:
      app: gogs
    name: gogs
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: wkulhanek/gogs:11.86
      from:
        kind: DockerImage
        name: wkulhanek/gogs:11.86
      generation: 2
      importPolicy: {}
      name: "11.86"
      referencePolicy:
        type: Source
  status: {}
 
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    labels:
      app: gogs
    name: gogs
    namespace: bft-gogs
  spec:
    port:
      targetPort: 3000-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: gogs
      weight: 100
    wildcardPolicy: None
  status: {}

- apiVersion: v1
  data:
    app.ini: |+
      APP_NAME = Gogs
      RUN_USER = gogs
      RUN_MODE = prod

      [database]
      DB_TYPE  = postgres
      HOST     = postgresql-gogs:5432
      NAME     = gogs
      USER     = gogs
      PASSWD   = gogs123
      SSL_MODE = disable
      PATH     = data/gogs.db

      [repository]
      ROOT = /data/gogs-repositories

      [server]
      DOMAIN           = localhost
      HTTP_PORT        = 3000
      ROOT_URL         = https://gogs-${NAMESPACE}.${APPS_DOMAIN}/
      DISABLE_SSH      = false
      SSH_PORT         = 22
      START_SSH_SERVER = false
      OFFLINE_MODE     = false

      [mailer]
      ENABLED = false

      [service]
      REGISTER_EMAIL_CONFIRM = false
      ENABLE_NOTIFY_MAIL     = false
      DISABLE_REGISTRATION   = false
      ENABLE_CAPTCHA         = true
      REQUIRE_SIGNIN_VIEW    = false

      [picture]
      DISABLE_GRAVATAR        = false
      ENABLE_FEDERATED_AVATAR = false

      [session]
      PROVIDER = file

      [log]
      MODE      = file
      LEVEL     = Info
      ROOT_PATH = /opt/gogs/log

      [security]
      INSTALL_LOCK = true
      SECRET_KEY   = 9ov8lRfv3HuDm2I

  kind: ConfigMap
  metadata:
    name: gogs
    

- apiVersion: v1
  data:
    database-name: Z29ncw==
    database-password: Z29nczEyMw==
    database-user: Z29ncw==
  kind: Secret
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.openshift.io/expose-database_name: '{.data[''database-name'']}'
      template.openshift.io/expose-password: '{.data[''database-password'']}'
      template.openshift.io/expose-username: '{.data[''database-user'']}'
    creationTimestamp: 2019-03-13T21:28:41Z
    labels:
      app: postgresql-persistent-gogs
      template: postgresql-persistent-template
    name: postgresql-gogs
  type: Opaque

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app: postgresql-persistent
      template: postgresql-persistent-template
    name: postgresql
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${POSTGRES_VOLUME_CAPACITY}
    storageClassName: vsphere-standard
  status: {}


- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    finalizers:
    - kubernetes.io/pvc-protection
    name: pvc-gogs
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${GOGS_VOLUME_CAPACITY}
    storageClassName: vsphere-standard
  status: {}
  
